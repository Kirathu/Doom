# This file contains common pin mappings for the Fysetc Spider board.
# To use this config, the firmware should be compiled for the STM32F446.
# When calling "menuconfig", enable "extra low-level configuration setup"
# and select the "12MHz crystal" as clock reference

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 350mm BTT Octopus Pro TMC5160 SPI config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths							                  [mcu] section
## Thermistor types						                  [extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location			                  [safe_z_home] section
## Homing end position				                      [gcode_macro G32] section
## Z Endstop Switch  offset for Z0		                  [stepper_z] section
## Probe points							                  [quad_gantry_level] section
## Min & Max gantry corner postions		                  [quad_gantry_level] section
## PID tune								                  [extruder] and [heater_bed] sections
## Fine tune E steps					                  [extruder] section

## Board definitions
[board_pins octopuspro]
aliases:
  x_step=PF13,  x_dir=PF12,  x_enable=PF14,  x_cs=PC4,  x_endstop=PG6,                      # stepper_x
  y_step=PG0,   y_dir=PG1,   y_enable=PF15,  y_cs=PD11, y_endstop=PG9,                      # stepper_y
  z0_step=PE6,  z0_dir=PA14, z0_enable=PE0,  z0_cs=PD3,                                     # stepper_z0
  z1_step=PE2,  z1_dir=PE3,  z1_enable=PD4,  z1_cs=PE1,                                     # stepper_z1
  z2_step=PC13, z2_dir=PF0,  z2_enable=PF1,  z2_cs=PE4,                                     # stepper_z2
  z3_step=PF9,  z3_dir=PF10, z3_enable=PG2,  z3_cs=PF2,                                     # stepper_z3
  bed_heater=PA1,                                                                           # heater bed-SSR 
  bed_sensor=PF3, chamber_sensor=PF4,                                                       # thermistor bed und chamber 
  bay_fan=PE5, chamber_fan=PA3, top_fan=PD12,                                               # fans bay und chamber und top
  caselight=PA2,                                                                            # LEDs
  netzschalter=PD15                                                                         # relais 240v heizbett JUMPER AUF 5V bei fanausgang
  
[board_pins nevermore_max2]
#mcu: nevermore
aliases:
  nevermore=PA8                                                                             # fan nevermore max 2

[board_pins toolhead]
mcu: sb2040
aliases:
#  onboard_temp=gpio26,                                                                     # onboard sensor
  e0_step=gpio9, e0_dir=gpio10, e0_enable=gpio7, e0_uart=gpio8,                             # extruder
  e0_heater=gpio6, e0_sensor=gpio27,                                                        # heater 
  probe=gpio25,                                                                             # optical mit 5V vom oberen endstop
  hotend_fan=gpio14, part_fan=gpio13,                                                       # fan
  sb_leds=gpio12                                                                            # neopixel
  
[mcu sb2040]
canbus_uuid: eb81f9f11cd0                                                                   # lila toolhead                                                              
#canbus_uuid: 27fb2d657061                                                                   # gruener toolhead

[mcu rpi]
serial: /tmp/klipper_host_mcu

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_1F003F00095053424E363420-if00

[printer]
kinematics: corexy
max_velocity: 300                                                   #Max 300 
max_accel: 5500			                                            #Max 7000
max_accel_to_decel: 3500 	                                        #Max 7000
max_z_velocity: 25			                                        #Max 30
max_z_accel: 350			                                        #Max 700
square_corner_velocity: 5.0

[exclude_object]

[idle_timeout]
gcode:
  TURN_OFF_HEATERS
  _CASELIGHT_OFF
  _NEVERMORE_OFF
  _NOZZLELIGHT_OFF

timeout: 7200                                                       # 2h


[gcode_arcs]
resolution: 1.0

[save_variables]
filename: /home/pi/klipper_config/.variables.stb


######################################################################
#   Includings
######################################################################

[include _macros.cfg]
[include bed_mesh.cfg]
[include adaptive_mesh.cfg]
#[include adaptive_purge.cfg]
[include air_filter_timer.cfg]
[include nozzle_scrub.cfg]
[include mainsail.cfg]			
[include sb2040.cfg]
[include stepper.cfg]
[include fan_sensors_bed.cfg]
[include bedfans_control.cfg]
[include qgl.cfg]
[include homing.cfg]
[include leds.cfg]
[include adxl.cfg]
[include nevermore.cfg]
[include pressure_adv.cfg]

#####################################################################

[delayed_gcode _CHECK_CONFIG]
initial_duration: 0.1
gcode:
  ## exexcute _USER_VARIABLE once at startup to do the needed calcs
  {% if printer['gcode_macro _USER_VARIABLE'] is not defined %}
    { action_respond_info(
      "CONFIG: ERROR\n"
      "_USER_VARIABLE macro missing\n"
      "This holds common variables for your printer and must be defined") }
  {% else %}
    _USER_VARIABLE
    _CHECK_CONSITENT
  {% endif %}

#####################################################################

[gcode_macro _CHECK_CONSITENT]
description: Helper: Check that some criterias are meet in the printer.cfg
gcode:
#  ## check that a MagProbe is defined if z_calibrate is defined
#  {% if printer['gcode_macro _USER_VARIABLE'].auto_z_offset|lower == 'z_calib' and
#    printer['gcode_macro _USER_VARIABLE'].mag_probe|lower == 'false' %}
#    {action_respond_info(
#                         "CONFIG: ERROR\n"
#                         "[z_calibration] defined but no MagProbe\n")}
#  {% endif %}

  ## check if save_variables are defined
  {% if 'save_variables' not in printer %}
    {action_respond_info(
                         "CONFIG: ERROR\n"
                         "[save_variables] missing\n"
                         "This is needed to store variables to a file")}
  {% endif %}
  ## check if virtual_sdcard is defined
  {% if 'virtual_sdcard' not in printer %}
    {action_respond_info(
                         "CONFIG: ERROR\n"
                         "[virtual_sdcard] missing\n"
                         "The printer.cfg is designed to be used with Mainsail, therefore this definition is essential")}
  {% endif %}

###################################################################
#                      User defines                              
###################################################################

[gcode_macro _USER_VARIABLE]
description: Helper: Contains User defined printer variables

##### Homing and general movement #####
variable_z_endstop: [125,125]                             # z Endstop xy somewhere at the printbed
variable_z_hop: 15                                        # z hop for moves e.g homing
variable_xy_home_current: 0.4                             # reduced homing current for x and y
variable_z_home_current: 0.3                              # reduced homing current for z
variable_home_accel: 1200                                 # reduced ACCEL for homing

##### Respond defaults #####
variable_respond_set_current: 0                           # default of RESPOND if not set in the call
variable_respond_set_acc: 0                               # default of RESPOND if not set in the call
variable_respond_probe_action: 0                          # default of RESPOND if not set in the call

##### Park Position #####
variable_parkbucket: [250,255,20]                         # parkbucket pos
variable_parkcenter: [125,125,35]                         # platte mitte pos
variable_parkfilament: [125,5,75]                         # filament wechsel pos
variable_startprint: [125,125,15]                         # startprint pos

##### wipe and clean nozzle #####
variable_start: [225,255,5]                               # start pos 
variable_purgebucket: [250,255,5]                         # purge pos 
variable_wipe_dist: -50
variable_wipe_qty: 2
variable_wipe_spd: 200
variable_raise_distance: 15                               # gleich wie z_hop

variable_purge_len: 30                                    # Amount of filament, in mm, to purge.
variable_purge_spd: 100                                   # Speed, in mm/min, of the purge.
variable_purge_temp_min: 200                              # Minimum nozzle temperature to permit a purge. Otherwise, purge will not occur.
variable_purge_ret: 3.0                                   # Retract length, in mm, after purging to prevent slight oozing. Adjust as necessary.
variable_ooze_dwell: 1                                    # Dwell/wait time, in seconds, after purging and retracting.

##### light intensity #####
variable_caselight_on: 0.40                               # caselight on value

##### fanspeed #####
variable_nevermore_off: 40                               # nevermore off temp automatic
variable_nevermore_on: 0.7                                # nevermore on value
variable_nevermore_end: 0.35                              # nevermore end value
variable_chamber_fan_on: 0.7                          # Circulating_air on value
variable_chamber_fan_end: 0.35                        # circulating_air end value

gcode:
  _CASELIGHT_ON

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 23.483
#*# pid_ki = 2.236
#*# pid_kd = 61.643
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 66.154
#*# pid_ki = 2.309
#*# pid_kd = 473.827
#*#
